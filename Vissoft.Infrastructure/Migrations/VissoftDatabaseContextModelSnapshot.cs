// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vissoft.Infrastructure.Data;

#nullable disable

namespace Vissoft.Infrastructure.Migrations
{
    [DbContext(typeof(VissoftDatabaseContext))]
    partial class VissoftDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int?>("CurriculumId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("ImgLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("GradeId");

                    b.HasIndex("SubjectId");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Curriculum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("curriculum", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("exercise", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.FillBlank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("fillBlank", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("grade", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Introduce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("introduce", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<int>("ThematicId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ThematicId");

                    b.ToTable("lesson", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Matching", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ASide")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BSide")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("matching", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.MultipleChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OptionA")
                        .HasColumnType("longtext");

                    b.Property<string>("OptionB")
                        .HasColumnType("longtext");

                    b.Property<string>("OptionC")
                        .HasColumnType("longtext");

                    b.Property<string>("OptionD")
                        .HasColumnType("longtext");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("multipleChoice", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.NewsAndEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("newsAndEvent", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<float?>("Mark")
                        .HasColumnType("float");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("QuizTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("QuizTypeId");

                    b.ToTable("quiz", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.CourseTeacher", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("courseTeacher", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.NewsAndEventAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("NewsAndEventId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NewsAndEventId");

                    b.ToTable("newsAndEventAttribute", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.QuizType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("quizType", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("resourceType", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("resource", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageLink")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Slogan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("slide", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.ToTable("subject", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WorkPlace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("teacher", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Thematic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("thematic", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.TrueFalse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Answer")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("trueFalse", (string)null);
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Course", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Curriculum", "Curriculum")
                        .WithMany("Courses")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Grade", "Grade")
                        .WithMany("Courses")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Subject", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculum");

                    b.Navigation("Grade");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Exercise", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Lesson", "Lesson")
                        .WithMany("Exercises")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.FillBlank", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Quiz", "Quiz")
                        .WithMany("FillBlanks")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Lesson", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Thematic", "Thematic")
                        .WithMany("Lessons")
                        .HasForeignKey("ThematicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Thematic");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Matching", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Quiz", "Quiz")
                        .WithMany("Matchings")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.MultipleChoice", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Quiz", "Quiz")
                        .WithMany("MultipleChoices")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Quiz", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Exercise", "Exercise")
                        .WithMany("Quizzes")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.QuizType", "QuizType")
                        .WithMany("Quizzes")
                        .HasForeignKey("QuizTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("QuizType");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.CourseTeacher", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Course", "Course")
                        .WithMany("CourseTeachers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Teacher", "Teachers")
                        .WithMany("CourseTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.NewsAndEventAttribute", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.NewsAndEvent", "NewsAndEvent")
                        .WithMany("NewsAndEventAttributes")
                        .HasForeignKey("NewsAndEventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewsAndEvent");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Resource", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Lesson", "Lesson")
                        .WithMany("Resources")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.ResourceType", "ResourceType")
                        .WithMany("Resources")
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("ResourceType");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Thematic", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Course", "Course")
                        .WithMany("Thematics")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.TrueFalse", b =>
                {
                    b.HasOne("Vissoft.Core.Entities.SkyMathEntities.Quiz", "Quiz")
                        .WithMany("TrueFalses")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Course", b =>
                {
                    b.Navigation("CourseTeachers");

                    b.Navigation("Thematics");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Curriculum", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Exercise", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Grade", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Lesson", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.NewsAndEvent", b =>
                {
                    b.Navigation("NewsAndEventAttributes");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Quiz", b =>
                {
                    b.Navigation("FillBlanks");

                    b.Navigation("Matchings");

                    b.Navigation("MultipleChoices");

                    b.Navigation("TrueFalses");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.QuizType", b =>
                {
                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.RelationalEntities.ResourceType", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Subject", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Teacher", b =>
                {
                    b.Navigation("CourseTeachers");
                });

            modelBuilder.Entity("Vissoft.Core.Entities.SkyMathEntities.Thematic", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
